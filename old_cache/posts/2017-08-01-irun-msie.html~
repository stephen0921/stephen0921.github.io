
<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1">irun MSIE</h2>
<div class="outline-text-2" id="text-1">
<p>
前一阵子折腾MSIE的验证环境，现在环境比较稳定了，也是时候来总结一下了。
</p>

<p>
MSIE的全称是Multi-Snapshot Incremental Elaboration，是cadence的irun工具的一个feature。使用这个feature可以节约仿真的编译时间，其本质就是把一些子模块编译好，顶层编译的时候直接把编译好的子模块的database拿过来，节省了elaboration的时间。
</p>

<p>
举一个例子，比如下面的一个验证环境。
</p>

<img src="../../images/msie.png" class="img-thumbnail" width="60%" >


<p>
其中，相对稳定基本不变的部分是cpu，其他的比如dut和tb_top会经常改变。那么cpu部分就可以提前编译好，作为一个database，官方叫法是primary snapshot。"挖掉"cpu的dut也可以作为一个primary snapshot。
</p>

<p>
具体的irun命令是:
</p>
<div class="highlight"><pre><span></span><span class="nf">cpu_compile</span><span class="o">:</span>
	irun <span class="k">$(</span>MSIE_PRIM_OPT<span class="k">)</span> -top cpu -name cpu -f cpu.f -nclibdirname <span class="k">$(</span>WORKDIR<span class="k">)</span>/cpu -l cpu_compile.log -incrpath tb_top.u_dut.u_cpu

<span class="nf">dut_compile</span><span class="o">:</span>
	irun <span class="k">$(</span>MSIE_PRIM_OPT<span class="k">)</span> -top dut -name dut -f dut_no_cpu.f -nclibdirname <span class="k">$(</span>WORKDIR<span class="k">)</span>/dut_no_cpu -l dut_compile.log -incrbind cpu -incrpath tb_top.u_dut

<span class="nf">tb_compile</span><span class="o">:</span>
	irun <span class="k">$(</span>MSIE_INCR_OPT<span class="k">)</span> -top tb_top -f tb_top_no_dut.f  -l tb_compile.log -primname dut@<span class="k">$(</span>WORKDIR<span class="k">)</span>/dut_no_cpu -primname cpu@<span class="k">$(</span>WORKDIR<span class="k">)</span>/cpu
</pre></div>

<p>
如果是后仿，还要做sdf反标，就要在compile每一个primary snapshot的时候把sdf文件吃进去，option是-sdf_cmd_file xx.cmd。sdf的拆分需要根据partition情况使用工具ncsdfc来完成。
</p>
</div>
</div>
